@page "/"
@using System.Net.NetworkInformation
@inject IPrinterData printerData

<PageTitle>Printer</PageTitle>


@if (printers is not null) {
    <PrinterList Items= "printers" ColumsToExclude="Id,Editing"></PrinterList>

}
else {
      <h1>"Loading"</h1>
}

@code{
    private List<PrinterModel> printers=new List<PrinterModel>();

    protected override async Task OnInitializedAsync() {
        printers =  await printerData.GetAllPrinters();

    }
    protected override async Task OnAfterRenderAsync(bool firstRender) {
        //
        await PingPrinters(printers);
        StateHasChanged();
        //return base.OnAfterRenderAsync(firstRender);
    }


    public async Task PingPrinters(List<PrinterModel> printers) {

        Ping pinger = new();
        if (printers is not null ) {
            foreach (var printer in printers) {
                PingReply reply = await pinger.SendPingAsync(printer.IP);
                if (reply is { Status: IPStatus.Success }) {
                    printer.Status = "Online";
                }
                else {
                    printer.Status = "Offline";
                }
            }
        }
    }

        //try {
        //    pinger = new Ping();
        //    PingReply reply = pinger.Send(nameOrAddress);
        //    pingable = reply.Status == IPStatus.Success;
        //}
        //catch (PingException) {
        //    // Discard PingExceptions and return false;
        //}
        //finally {
        //    if (pinger != null) {
        //        pinger.Dispose();
        //    }
        //}

        //return pingable;

}

