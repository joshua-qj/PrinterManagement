@page "/SpringwoodMazdaServices"
@using System.Net.NetworkInformation
@inject IPrinterData printerData

<PageTitle>Springwood Mazda Services Printer</PageTitle>


@if (printers is not null) {
        <CascadingValue Name="ParentPath" Value="@parentPath">
    <PrinterList Items="printers" ColumsToExclude="Id,Editing,Site"></PrinterList>
    </CascadingValue>
}
else {
    <h1>"Loading"</h1>
}

@code {
    private List<PrinterModel>? printers = new List<PrinterModel>();
    private string parentPath { get; set; } = "SpringwoodMazdaServices";
    protected override async Task OnInitializedAsync() {
        printers = await printerData.GetSpringwoodMazdaServicesPrinters();

    }
    protected override async Task OnAfterRenderAsync(bool firstRender) {
        //
        await PingPrinters(printers);
        StateHasChanged();
        //return base.OnAfterRenderAsync(firstRender);
    }


    public async Task PingPrinters(List<PrinterModel> printers) {

        Ping pinger = new();
        if (printers is not null) {
            foreach (var printer in printers) {
                PingReply reply = await pinger.SendPingAsync(printer.IP);
                if (reply is { Status: IPStatus.Success }) {
                    printer.Status = "Online";
                }
                else {
                    printer.Status = "Offline";
                }
            }
        }
    }

}
