@typeparam TItem
@using PrinterManagementAppLibrary.Models
@using System.Reflection

@if (memberInfo != null && memberInfo.Length > 0) {
    <table class="table table-striped">
        <thead>
            <tr>
                @foreach (var member in memberInfo) {
                    @if (member.MemberType == MemberTypes.Property && !ColumsToExclude.Contains(member.Name, StringComparison.OrdinalIgnoreCase)) {
                        <th>
                            @member.Name
                        </th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in this.Items) {
                <tr>
                    @foreach (var member in memberInfo) {
                        @if (member.MemberType == MemberTypes.Property &&
                       !ColumsToExclude.Contains(member.Name, StringComparison.OrdinalIgnoreCase)) {
                            <td>
                                @if (member.Name=="IP") {                                    
                                    <a href="https://@item.GetType().GetProperty(member.Name).GetValue(item)">@item.GetType().GetProperty(member.Name).GetValue(item)</a>
                                                                
                                }else {
                                    @item.GetType().GetProperty(member.Name).GetValue(item)
                                }
                            </td>
                        }
                    }
                    <td>
                        @*                                           <AuthorizeView Roles="Admin">
                <Authorized>*@

                        <a href="@($"/printer/{item.GetType().GetProperty("Id").GetValue(item)}")" class="btn btn-primary btn-sm">
                            <i class="oi oi-pencil"></i>
                        </a>
                        @*                        </Authorized>
                </AuthorizeView>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a style="float: right; " href="@("/printer/add")" class="margin-right: 0;btn btn-primary btn-sm">
        <i class="oi oi-plus"></i> Add
    </a>
}

@code {
    [Parameter]
    public List<TItem> Items { get; set; }
    [Parameter]
    public string ColumsToExclude { get; set; }

    MemberInfo[] memberInfo;

    public string? StatusCssClass { get; set; }
    protected override void OnParametersSet() {
        base.OnParametersSet();
        if (Items != null && Items.Count > 0) {
            Type typeofItem = this.Items[0].GetType();
            memberInfo = typeofItem.GetMembers();
            //get all info of constructors, methods,properties...
        }
    }

    //public override bool Equals(object obj) {
    //    return obj is PrinterList<TItem> list &&
    //           EqualityComparer<MemberInfo[]>.Default.Equals(memberInfo, list.memberInfo);
    //}

    protected override async Task OnInitializedAsync() {
        //var results = await
        //this.printers = results.ToList();

    }

    protected string StatusBadge(string status) {
        if (status.Equals("Online")) {
            StatusCssClass = "badge bg-success";
        }else {
            StatusCssClass = "badge  bg-danger";
        }       
        return StatusCssClass;
    }

    protected string StatusBadge(string status) {
        if (status.Equals("Online")) {
            StatusCssClass = "badge bg-success";
        }
        else {
            StatusCssClass = "badge  bg-danger";
        }
        return StatusCssClass;
    }

  


}
